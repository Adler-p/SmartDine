name: Frontend CI Workflow

on:
  push:
    branches:
      - frontend # Trigger this workflow only on 'frontend' branch push
  pull_request:
    branches:
      - frontend # Trigger on pull requests to 'frontend' branch

jobs:
  linting_and_testing:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Specify your node version (adjust if needed)

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run Prettier to format the code
      - name: Run Prettier
        run: npm run format

      # Run linting
      - name: Run Lint
        run: npm run lint

      # Cypress Tests
      - name: Cypress Tests
        uses: cypress-io/github-action@v3
        with:
          browser: chrome
          start: npm run dev
          wait-on: 'http://localhost:3000'

  # deploy:
  #   needs: linting_and_testing # Ensure linting and tests are successful before deployment
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout the code from the repository again
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     # Set up Node.js environment
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'

  #     # Install dependencies again (if necessary for deployment)
  #     - name: Install dependencies
  #       run: npm install

  #     # Deploy to Vercel (make sure to set up your Vercel project for GitHub integration)
  #     - name: Deploy to Vercel
  #       run: npx vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }} --scope=zufiqqar-lees-projects --project=nus-iss-smart-dine
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Set your Vercel token as a GitHub secret

